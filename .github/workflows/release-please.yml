name: "Release Generator"

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    name: Release Management
    outputs:
      release_metadata: ${{ toJSON(steps.release.outputs) }}
    steps:
      - name: Update Release PR
        id: release
        uses: googleapis/release-please-action@7987652d64b4581673a76e33ad5e98e3dd56832f
        with:
          config-file: .github/workflows/release-please-config.json
          manifest-file: .github/workflows/release-please-manifest.json
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set Up Ruby
        uses: ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4
        with:
          ruby-version: 3.3
          bundler-cache: true
        env:
          BUNDLE_RUBYGEMS__PKG__GITHUB__COM: ${{ secrets.GITHUB_TOKEN }}
          BUNDLE_FROZEN: false
      - name: Bundle Install
        run: |
          echo ${{ toJSON(steps.release.outputs) }}
          exit 0
          git config --global user.name ${{ github.actor }}
          git config --global user.email ${{ github.actor }}@users.noreply.github.com
          [ -z "$(git diff Gemfile.lock)" ] && exit 0
          git add Gemfile.lock && git commit -m "bundle install" && git push origin HEAD

  # gem-build-and-release:
  #   runs-on: ubuntu-latest
  #   name: Build and Publish Gems
  #   needs: release-please
  #   if: ${{ fromJSON(fromJSON(needs.release-please.outputs.release_metadata).releases_created) }}
  #   strategy:
  #     matrix:
  #       gem_path: ${{ fromJSON(fromJSON(needs.release-please.outputs.release_metadata).paths_released) }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Set Up Ruby
  #       uses: ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4
  #       with:
  #         ruby-version: 3.3
  #         bundler-cache: true
  #       env:
  #         BUNDLE_RUBYGEMS__PKG__GITHUB__COM: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Publish to GPR
  #       run: script/build-gem -g "${{ matrix.gem_path }}" && script/gpr-push -g "${{ matrix.gem_path }}"
  #       env:
  #         GEM_HOST_API_KEY: "Bearer ${{secrets.GITHUB_TOKEN}}"
  #         PUSH_HOST: "https://rubygems.pkg.github.com/${{ github.repository_owner }}"
  #         BUNDLE_RUBYGEMS__PKG__GITHUB__COM: ${{ secrets.GITHUB_TOKEN }}
